{"ast":null,"code":"import { regUserName, regEmail } from \"../constants/constant\";\nexport const getLocalStorage = key => {\n  try {\n    if (key) {\n      const data = localStorage.getItem(key);\n\n      if (data) {\n        return JSON.parse(data);\n      }\n    }\n  } catch (e) {\n    console.log({\n      e\n    });\n  }\n\n  return null;\n};\nexport const setLocalStorage = (key, data) => {\n  if (key && data) {\n    localStorage.setItem(key, JSON.stringify(data));\n  }\n};\nexport const validateUserName = name => {\n  const value = typeof name === \"string\" ? name.trim() : \"\";\n\n  if (!value) {\n    return \"required*\";\n  }\n\n  if (value.length < 3) {\n    return \"Field should atleast be 3 chracters\";\n  }\n\n  if (!regUserName.test(value)) {\n    return \"Field should only contains alphabets or numbers\";\n  }\n\n  return \"\";\n};\nexport const validateEmail = email => {\n  const value = typeof email === \"string\" ? email.trim() : \"\";\n\n  if (!value) {\n    return \"Email is required\";\n  } else if (!regEmail.test(value)) {\n    return \"Please Enter valid Email\";\n  }\n\n  return \"\";\n};\nexport const validatePassword = pass => {\n  const value = typeof pass === \"string\" ? pass.trim() : \"\";\n\n  if (!value) {\n    return \"Password is required\";\n  } else if (value.length < 6) {\n    return \"Password should atleast be 6 chracters\";\n  }\n\n  return \"\";\n};\nexport const validateZipCode = zipcode => {\n  const value = typeof zipcode === \"string\" ? zipcode.trim() : \"\";\n\n  if (!value) {\n    return \"Zip code is required\";\n  } else if (value.length !== 5) {\n    return \"zip-code must be 5 digit\";\n  }\n\n  return \"\";\n};\nexport const validateGender = gender => {\n  const value = typeof gender === \"string\" ? gender.trim() : \"\";\n\n  if (!value) {\n    return \"Gender field is required\";\n  }\n\n  return \"\";\n};","map":{"version":3,"sources":["/Users/ali/codejanrepo/src/utils/utils.js"],"names":["regUserName","regEmail","getLocalStorage","key","data","localStorage","getItem","JSON","parse","e","console","log","setLocalStorage","setItem","stringify","validateUserName","name","value","trim","length","test","validateEmail","email","validatePassword","pass","validateZipCode","zipcode","validateGender","gender"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,uBAAtC;AAEA,OAAO,MAAMC,eAAe,GAAIC,GAAD,IAAQ;AACnC,MAAG;AACH,QAAGA,GAAH,EAAO;AACH,YAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBH,GAArB,CAAb;;AACA,UAAGC,IAAH,EAAQ;AACJ,eAAOG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;AACH;AACJ;AACJ,GAPG,CAQA,OAAMK,CAAN,EAAQ;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,MAAAA;AAAD,KAAZ;AACH;;AACD,SAAO,IAAP;AAEH,CAdM;AAgBP,OAAO,MAAMG,eAAe,GAAG,CAACT,GAAD,EAAMC,IAAN,KAAc;AAEzC,MAAGD,GAAG,IAAIC,IAAV,EAAe;AAEXC,IAAAA,YAAY,CAACQ,OAAb,CAAqBV,GAArB,EAA0BI,IAAI,CAACO,SAAL,CAAeV,IAAf,CAA1B;AAEH;AACJ,CAPM;AAWP,OAAO,MAAMW,gBAAgB,GAAIC,IAAD,IAAU;AACtC,QAAMC,KAAK,GAAG,OAAOD,IAAP,KAAgB,QAAhB,GAA2BA,IAAI,CAACE,IAAL,EAA3B,GAAyC,EAAvD;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAO,WAAP;AACD;;AACD,MAAIA,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AACpB,WAAO,qCAAP;AACD;;AACD,MAAI,CAACnB,WAAW,CAACoB,IAAZ,CAAiBH,KAAjB,CAAL,EAA8B;AAC5B,WAAO,iDAAP;AACD;;AACD,SAAO,EAAP;AACD,CAZI;AAcL,OAAO,MAAMI,aAAa,GAAIC,KAAD,IAAW;AACtC,QAAML,KAAK,GAAG,OAAOK,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACJ,IAAN,EAA5B,GAA2C,EAAzD;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAO,mBAAP;AACD,GAFD,MAEO,IAAI,CAAChB,QAAQ,CAACmB,IAAT,CAAcH,KAAd,CAAL,EAA2B;AAChC,WAAO,0BAAP;AACD;;AACD,SAAO,EAAP;AACD,CARM;AAUP,OAAO,MAAMM,gBAAgB,GAAIC,IAAD,IAAU;AACxC,QAAMP,KAAK,GAAG,OAAOO,IAAP,KAAgB,QAAhB,GAA2BA,IAAI,CAACN,IAAL,EAA3B,GAAyC,EAAvD;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAO,sBAAP;AACD,GAFD,MAEO,IAAIA,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AAC3B,WAAO,wCAAP;AACD;;AACD,SAAO,EAAP;AACD,CARM;AAUP,OAAO,MAAMM,eAAe,GAAIC,OAAD,IAAa;AAC1C,QAAMT,KAAK,GAAG,OAAOS,OAAP,KAAmB,QAAnB,GAA8BA,OAAO,CAACR,IAAR,EAA9B,GAA+C,EAA7D;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAO,sBAAP;AACD,GAFD,MAEO,IAAIA,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AAC7B,WAAO,0BAAP;AACD;;AACD,SAAO,EAAP;AACD,CARM;AAUP,OAAO,MAAMQ,cAAc,GAAIC,MAAD,IAAY;AACxC,QAAMX,KAAK,GAAG,OAAOW,MAAP,KAAkB,QAAlB,GAA6BA,MAAM,CAACV,IAAP,EAA7B,GAA6C,EAA3D;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAO,0BAAP;AACD;;AACD,SAAO,EAAP;AACD,CANM","sourcesContent":["import { regUserName, regEmail } from \"../constants/constant\";\n\nexport const getLocalStorage = (key) =>{\n    try{\n    if(key){\n        const data = localStorage.getItem(key);\n        if(data){\n            return JSON.parse(data)\n        }\n    }\n}\n    catch(e){\n        console.log({e})\n    }\n    return null\n  \n}\n\nexport const setLocalStorage = (key, data) =>{\n\n    if(key && data){\n\n        localStorage.setItem(key, JSON.stringify(data));\n        \n    }\n}\n  \n\n\nexport const validateUserName = (name) => {\n    const value = typeof name === \"string\" ? name.trim() : \"\";\n    if (!value) {\n      return \"required*\";\n    }\n    if (value.length < 3) {\n      return \"Field should atleast be 3 chracters\";\n    }\n    if (!regUserName.test(value)) {\n      return \"Field should only contains alphabets or numbers\";\n    }\n    return \"\";\n  };\n\n  export const validateEmail = (email) => {\n    const value = typeof email === \"string\" ? email.trim() : \"\";\n    if (!value) {\n      return \"Email is required\";\n    } else if (!regEmail.test(value)) {\n      return \"Please Enter valid Email\";\n    }\n    return \"\";\n  };\n  \n  export const validatePassword = (pass) => {\n    const value = typeof pass === \"string\" ? pass.trim() : \"\";\n    if (!value) {\n      return \"Password is required\";\n    } else if (value.length < 6) {\n      return \"Password should atleast be 6 chracters\";\n    }\n    return \"\";\n  };\n\n  export const validateZipCode = (zipcode) => {\n    const value = typeof zipcode === \"string\" ? zipcode.trim() : \"\";\n    if (!value) {\n      return \"Zip code is required\";\n    } else if (value.length !== 5) {\n      return \"zip-code must be 5 digit\";\n    }\n    return \"\";\n  };\n  \n  export const validateGender = (gender) => {\n    const value = typeof gender === \"string\" ? gender.trim() : \"\";\n    if (!value) {\n      return \"Gender field is required\";\n    }\n    return \"\";\n  };\n  "]},"metadata":{},"sourceType":"module"}