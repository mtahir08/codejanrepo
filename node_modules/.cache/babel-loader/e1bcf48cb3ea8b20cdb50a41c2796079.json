{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Downloads/blood-bank-main/src/routes/UserSignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { loginContext } from \"../context/context\";\nimport InputField from '../components/InputField';\nimport { getLocalStorage, setLocalStorage, validateEmail, validatePassword } from \"../utils/utils\";\nimport Loader from '../components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserSignUp = () => {\n  _s();\n\n  const {\n    login,\n    setLogin,\n    user,\n    setUser\n  } = useContext(loginContext);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (login && user) {\n      history.replace(\"/\");\n    }\n  }, [login, user]);\n  const history = useHistory();\n  const [message, setMessage] = useState(\"\");\n  const [signUpData, setSignUpData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errorTypeMail, setErrorTypeMail] = useState(\"\");\n  const [errorTypePass, setErrorTypePass] = useState(\"\");\n\n  const change = event => {\n    setMessage(\"\");\n    event.preventDefault();\n    const {\n      name,\n      value\n    } = event.target;\n    setSignUpData(preVal => {\n      return { ...preVal,\n        [name]: value\n      };\n    });\n  }; // Save this as fetch.js --------------------------------------------------------------------------\n\n\n  const click = () => {\n    const emailError = validateEmail(signUpData.email);\n    const passError = validatePassword(signUpData.password);\n\n    if (emailError !== \"\") {\n      setErrorTypeMail(emailError);\n      setErrorTypePass(\"\");\n    } else if (passError !== \"\") {\n      setErrorTypePass(passError);\n      setErrorTypeMail(\"\");\n    } else {\n      setLoading(pre => !pre);\n      setErrorTypeMail(\"\");\n      setErrorTypePass(\"\");\n      const auth = getAuth();\n      createUserWithEmailAndPassword(auth, signUpData.email, signUpData.password).then(res => {\n        // Signed in \n        if (res === null || res === void 0 ? void 0 : res.user) {\n          setLocalStorage(\"__USER__\", {\n            mail: res.user.email,\n            id: res.user.uid\n          });\n          setUser(getLocalStorage(\"__USER__\"));\n          setLocalStorage('Islogin', res.user.accessToken);\n          setLogin(getLocalStorage(\"Islogin\"));\n          setSignUpData({\n            email: '',\n            password: ''\n          });\n          history.push('/');\n        }\n      }).catch(error => {\n        const errorCode = error.code;\n        setMessage(errorCode);\n      }).finally(() => {\n        setLoading(pre => !pre);\n      });\n    }\n  };\n\n  function back() {\n    history.goBack();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-40 box-shadow-ccc b-1-c9  p-4 m-3-auto d-flex flex-direction-column align-items-center\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red f-014 mb-2\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          type: \"email\",\n          onChange: change,\n          error: errorTypeMail,\n          name: \"email\",\n          placeholder: \"Email\",\n          value: signUpData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          type: \"password\",\n          onChange: change,\n          error: errorTypePass,\n          name: \"password\",\n          value: signUpData.password,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            click();\n          },\n          className: \"f-bold f-family-monospace f-017 bg-white outline-none b-none green mb-2 mt-2 cursor-pointer\",\n          children: \" Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => back(),\n          className: \"f-bold f-family-monospace f-017 bg-white  b-none brown cursor-pointer\",\n          children: \" Back To Login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserSignUp, \"k5ZYBeNqGxv9sT/H6gVMsCPfea8=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserSignUp;\nexport default UserSignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSignUp\");","map":{"version":3,"sources":["/Users/ali/Downloads/blood-bank-main/src/routes/UserSignUp.jsx"],"names":["React","useState","useEffect","useContext","useHistory","getAuth","createUserWithEmailAndPassword","loginContext","InputField","getLocalStorage","setLocalStorage","validateEmail","validatePassword","Loader","UserSignUp","login","setLogin","user","setUser","loading","setLoading","history","replace","message","setMessage","signUpData","setSignUpData","email","password","errorTypeMail","setErrorTypeMail","errorTypePass","setErrorTypePass","change","event","preventDefault","name","value","target","preVal","click","emailError","passError","pre","auth","then","res","mail","id","uid","accessToken","push","catch","error","errorCode","code","finally","back","goBack"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { loginContext } from \"../context/context\";\nimport InputField from '../components/InputField';\nimport {\n  getLocalStorage,\n  setLocalStorage,\n  validateEmail,\n  validatePassword,\n} from \"../utils/utils\";\nimport Loader from '../components/Loader';\nconst UserSignUp = () => {\n  const { login, setLogin, user,setUser } = useContext(loginContext);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (login && user) {\n      history.replace(\"/\")\n    }\n  }, [login, user])\n\n\n  const history = useHistory();\n  const [message, setMessage] = useState(\"\");\n  const [signUpData, setSignUpData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const [errorTypeMail, setErrorTypeMail] = useState(\"\");\n  const [errorTypePass, setErrorTypePass] = useState(\"\");\n\n  const change = (event) => {\n    setMessage(\"\")\n    event.preventDefault();\n    const { name, value } = event.target;\n    setSignUpData((preVal) => {\n      return { ...preVal, [name]: value }\n    })\n\n  }\n\n\n  // Save this as fetch.js --------------------------------------------------------------------------\n\n  const click = () => {\n    const emailError = validateEmail(signUpData.email);\n    const passError = validatePassword(signUpData.password);\n\n    if (emailError !== \"\") {\n      setErrorTypeMail(emailError);\n      setErrorTypePass(\"\");\n\n    } else if (passError !== \"\") {\n      setErrorTypePass(passError);\n      setErrorTypeMail(\"\");\n\n\n    } else {\n      setLoading((pre) => !pre);\n\n      setErrorTypeMail(\"\");\n      setErrorTypePass(\"\");\n\n      const auth = getAuth();\n      createUserWithEmailAndPassword(auth, signUpData.email, signUpData.password)\n        .then((res) => {\n          // Signed in \n          if (res?.user) {\n            setLocalStorage(\"__USER__\", {mail : res.user.email, id : res.user.uid})\n            setUser(getLocalStorage(\"__USER__\"))\n            setLocalStorage('Islogin', res.user.accessToken);\n            setLogin(getLocalStorage(\"Islogin\"))\n            setSignUpData({\n                email: '',\n                password: '',\n            })\n            \n            history.push('/')\n\n          }\n        })\n        .catch((error) => {\n          const errorCode = error.code;\n          setMessage(errorCode);\n        })\n        .finally(() => {\n          setLoading((pre) => !pre);\n\n        })\n\n    }\n  }\n  function back() {\n    history.goBack()\n  }\n\n\n  return <>\n\n    <div className=\"w-40 box-shadow-ccc b-1-c9  p-4 m-3-auto d-flex flex-direction-column align-items-center\">\n\n      {loading ? <Loader /> : <><span className=\"red f-014 mb-2\">{message}</span>\n        <InputField type=\"email\" onChange={change} error={errorTypeMail} name='email' placeholder=\"Email\" value={signUpData.email} />\n        <InputField type=\"password\" onChange={change} error={errorTypePass} name='password' value={signUpData.password} placeholder=\"Password\" />\n\n        <button\n          onClick={() => { click() }}\n          className=\"f-bold f-family-monospace f-017 bg-white outline-none b-none green mb-2 mt-2 cursor-pointer\"> Submit</button>\n        <button onClick={() => back()} className=\"f-bold f-family-monospace f-017 bg-white  b-none brown cursor-pointer\"> Back To Login </button></>}\n\n\n    </div>\n\n\n\n  </>\n}\nexport default UserSignUp;"]},"metadata":{},"sourceType":"module"}